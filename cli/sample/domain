// Generated code by gotem
package {{.Package}}

import (
	"errors"
	{{range .Imports }} {{.Name}} "{{.Path}}"
	{{ end }}
)
{{$servicePackage := .ServicePackage}}
{{$domain := .Domain}}
{{range .Body}}
{{$serviceName := .ServiceName}}
var _ {{$servicePackage}}.{{$serviceName}}Server = new({{$serviceName}}{{$domain}}Impl)

// {{.Comment}}
func New{{$serviceName}}{{$domain}}(
	{{range .Injectors}} {{.Alias}} {{.Package}}.{{.Name}},
	{{end}}
) {{$servicePackage}}.{{$serviceName}}Server {
	// name := "{{$serviceName}}{{$domain}}"
	return &{{$serviceName}}{{$domain}}Impl{
		{{range .Injectors}} {{.Alias}}: {{.Alias}},
		{{end}}
	}
}

type {{$serviceName}}{{$domain}}Impl struct {
	{{$servicePackage}}.Unimplemented{{$serviceName}}ServiceServer

	{{range .Injectors}} {{.Alias}} {{.Package}}.{{.Name}}
	{{end}}
}
{{range .Methods}}
{{.Comment}}
func (h *{{$serviceName}}{{$domain}}Impl) {{.Name}}(
	{{range .Args}} {{.Alias}} {{.Type}}, {{end}}
) ({{range .Returns}} {{.Alias}} {{.Type}}, {{end}}) {
	if err := req.Validate(); err != nil {
		return nil, err
	}

	return nil, errors.New("not implemented")
	// return &{{$servicePackage}}.{{$serviceName}}{{.Name}}Response{}, nil
}
{{end}}
{{end}}
